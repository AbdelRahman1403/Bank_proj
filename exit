[33mcommit 873540267c2e1775a32e46a7b24eeaacb7798a3e[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mmain[m[33m, [m[1;31morigin/main[m[33m)[m
Author: AbdelRahman_Yassin <abdelrahman.ahmed.yassin03@gmail.com>
Date:   Tue May 14 21:58:50 2024 +0300

    first commit

[1mdiff --git a/.gitignore b/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..d8db929[m
[1m--- /dev/null[m
[1m+++ b/.gitignore[m
[36m@@ -0,0 +1,5 @@[m
[32m+[m[32m/Bank_proj.cbp[m
[32m+[m[32m/Bank_proj.depend[m
[32m+[m[32m/Bank_proj.layout[m
[32m+[m[32m/bin[m
[32m+[m[32m/obj[m
\ No newline at end of file[m
[1mdiff --git a/Platform_Types.h b/Platform_Types.h[m
[1mnew file mode 100644[m
[1mindex 0000000..00ed0ac[m
[1m--- /dev/null[m
[1m+++ b/Platform_Types.h[m
[36m@@ -0,0 +1,64 @@[m
[32m+[m
[32m+[m[32m#ifndef _PLATFORM_TYPES_H[m
[32m+[m[32m#define _PLATFORM_TYPES_H[m
[32m+[m
[32m+[m[32m#define CPU_TYPE_8  8[m
[32m+[m[32m#define CPU_TYPE_16 16[m
[32m+[m[32m#define CPU_TYPE_32 32[m
[32m+[m[32m#define CPU_TYPE_64 64[m
[32m+[m[32m/*************************************/[m
[32m+[m[32m#define CPU_TYPE (CPU_TYPE_64)[m
[32m+[m[32m/*************************************/[m
[32m+[m[32m#if (CPU_TYPE == CPU_TYPE_64)[m
[32m+[m[32mtypedef unsigned char boolean;[m
[32m+[m[32mtypedef unsigned char uint8;[m
[32m+[m[32mtypedef unsigned short uint16;[m
[32m+[m[32mtypedef unsigned int uint32;[m
[32m+[m[32mtypedef unsigned long long uint64;[m
[32m+[m[32mtypedef signed char sint8;[m
[32m+[m[32mtypedef signed short sint16;[m
[32m+[m[32mtypedef signed int sint32;[m
[32m+[m[32mtypedef signed long long sint64;[m
[32m+[m[32mtypedef float float32;[m
[32m+[m[32mtypedef double float64;[m
[32m+[m
[32m+[m[32m#elif (CPU_TYPE == CPU_TYPE_32)[m
[32m+[m[32mtypedef unsigned char boolean;[m
[32m+[m[32mtypedef unsigned char uint8;[m
[32m+[m[32mtypedef unsigned short uint16;[m
[32m+[m[32mtypedef unsigned long uint32;[m
[32m+[m[32mtypedef unsigned long long uint64;[m
[32m+[m[32mtypedef signed char sint8;[m
[32m+[m[32mtypedef signed short sint16;[m
[32m+[m[32mtypedef signed long sint32;[m
[32m+[m[32mtypedef signed long long sint64;[m
[32m+[m[32mtypedef float float32;[m
[32m+[m[32mtypedef double float64;[m
[32m+[m
[32m+[m[32m#elif (CPU_TYPE == CPU_TYPE_16)[m
[32m+[m[32mtypedef unsigned char boolean;[m
[32m+[m[32mtypedef unsigned char uint8;[m
[32m+[m[32mtypedef unsigned short uint16;[m
[32m+[m[32mtypedef unsigned long uint32;[m
[32m+[m[32mtypedef unsigned long long uint64;[m
[32m+[m[32mtypedef signed char sint8;[m
[32m+[m[32mtypedef signed short sint16;[m
[32m+[m[32mtypedef signed long sint32;[m
[32m+[m[32mtypedef signed long long sint64;[m
[32m+[m[32mtypedef float float32;[m
[32m+[m[32mtypedef double float64;[m
[32m+[m
[32m+[m[32m#elif (CPU_TYPE == CPU_TYPE_8)[m
[32m+[m[32mtypedef unsigned char boolean;[m
[32m+[m[32mtypedef unsigned char uint8;[m
[32m+[m[32mtypedef unsigned short uint16;[m
[32m+[m[32mtypedef unsigned long uint32;[m
[32m+[m[32mtypedef signed char sint8;[m
[32m+[m[32mtypedef signed short sint16;[m
[32m+[m[32mtypedef signed long sint32;[m
[32m+[m[32mtypedef float float32;[m
[32m+[m
[32m+[m[32m#endif[m
[32m+[m[32m/*************************************/[m
[32m+[m[32m#endif // _PLATFORM_TYPES_H[m
[32m+[m
[1mdiff --git a/bank.c b/bank.c[m
[1mnew file mode 100644[m
[1mindex 0000000..af3cf18[m
[1m--- /dev/null[m
[1m+++ b/bank.c[m
[36m@@ -0,0 +1,29 @@[m
[32m+[m
[32m+[m[32m#include "bank.h"[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m
[32m+[m[32m*/[m
[32m+[m
[32m+[m[32mcustomer_t *create_customer(void){[m
[32m+[m[32m    customer_t *cus = (customer_t*)malloc(sizeof(customer_t));[m
[32m+[m[32m    if(cus == NULL){[m
[32m+[m[32m        printf("Error , can not allocate memory!!\n");[m
[32m+[m[32m        free(cus);[m
[32m+[m[32m    }[m
[32m+[m[32m    else{[m
[32m+[m[32m        printf("Enter customer's ID : ");[m
[32m+[m[32m        scanf("%i",&(cus->ID));[m
[32m+[m[32m        fflush(stdin);[m
[32m+[m[32m        printf("Enter customer's Name : ");[m
[32m+[m[32m        scanf("%s",(cus->name));[m
[32m+[m[32m        fflush(stdin);[m
[32m+[m[32m        printf("Enter customer's salary : ");[m
[32m+[m[32m        scanf("%i",&(cus->salary));[m
[32m+[m[32m        fflush(stdin);[m
[32m+[m[32m        printf("Enter customer's account : ");[m
[32m+[m[32m        scanf("%s",(cus->type));[m
[32m+[m[32m        fflush(stdin);[m
[32m+[m[32m    }[m
[32m+[m[32m    return cus;[m
[32m+[m[32m}[m
[1mdiff --git a/bank.h b/bank.h[m
[1mnew file mode 100644[m
[1mindex 0000000..834762d[m
[1m--- /dev/null[m
[1m+++ b/bank.h[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m#ifndef BANK_H[m
[32m+[m[32m#define BANK_H[m
[32m+[m
[32m+[m[32m#include <stdio.h>[m
[32m+[m[32m#include <stdlib.h>[m
[32m+[m[32m#include "Platform_Types.h"[m
[32m+[m[32mtypedef struct {[m
[32m+[m[32m    uint16 ID;[m
[32m+[m[32m    uint8 name[30];[m
[32m+[m[32m    uint16 salary;[m
[32m+[m[32m    uint8 type;[m
[32m+[m[32m}customer_t;[m
[32m+[m
[32m+[m[32mcustomer_t *create_customer(void);[m
[32m+[m
[32m+[m
[32m+[m[32m#endif // BANK_H[m
[1mdiff --git a/main.c b/main.c[m
[1mnew file mode 100644[m
[1mindex 0000000..56b54c9[m
[1m--- /dev/null[m
[1m+++ b/main.c[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32m#include "bank.h"[m
[32m+[m
[32m+[m[32mint main()[m
[32m+[m[32m{[m
[32m+[m	[32mreturn 0;[m
[32m+[m[32m}[m
